import os
import requests
import subprocess

# GitHub username
github_user = "ursa-mikail"
output_dir = "./sample_data"

# Ensure the directory exists
os.makedirs(output_dir, exist_ok=True)

# Get the list of repositories
url = f"https://api.github.com/users/{github_user}/repos"
response = requests.get(url)

if response.status_code == 200:
    repos = response.json()
    
    for repo in repos:
        repo_name = repo["name"]
        clone_url = repo["clone_url"]
        repo_path = os.path.join(output_dir, repo_name)
        
        # Clone only if it doesn't exist
        if not os.path.exists(repo_path):
            print(f"Cloning {repo_name}...")
            subprocess.run(["git", "clone", clone_url, repo_path])
        else:
            print(f"Repository {repo_name} already exists. Skipping...")

else:
    print(f"Failed to fetch repositories: {response.status_code}")


"""
Cloning banking_transaction_and_in_memory_database_system...
Cloning basic_openai_api_usage...
Cloning beginning_ML_analytics...
Cloning bolting_and_molting_with_golang_an_anarchist_coding_cook_book...
Cloning caution-on-canonicalization-of-data-struct-format-under-parsing-vulnerabilities...
Cloning challenge_and_response...
Cloning chrome-ext-moon-phase...
Cloning chrome-ext-utilities-timestamp-and-random-hex...
Cloning ciphers...
Cloning cipher_js...
Cloning collab_interface_config_setting_ML_platform...
Cloning contact_tracing_simulation_on_world_map...
Cloning convert_jupyter_notebook_to_python...
Cloning crime_data_location_heat_map...
Cloning cryptographic_function_access_control...
Cloning CSV-to-HTML-table...
Cloning curl-email...
Cloning CVE_data_analysis...
Cloning data_form_and_format...
Cloning data_list_dict_csv...
:
"""